c
categories
q
categories
c
n
categories
n
q
links[levels-2].text
links[levels-2]
n
links.length
links
n
item
q
categories
n
list_items.length
list_items
c
list_items.length
list_items
q
hash
c
hash
c
hash
c
hash
c
hash
c
hash
c
hash
c
hash
c
hash
c
hash
q
hash
c
hash
c
hash
c
hash
c
hash
q
hash
pair
hash
c
hash
c
q
hash
c
hash
c
hash
c
hash
c
hash
c
hash
c
hash
q
c
hash
hash.merge(key => val)
hash
val
key
hash
q
c
n
q
hash
n
pair
n
item.text.split(":")[0]
item.text.split(":")
item.text
item
c
exception
n
product_bullets[0].text.split(":")[0].strip
product_bullets[0].text.split(":")[0]
product_bullets[0].text.split(":")
product_bullets[0].text
product_bullets[0]
product_bullets.length[0]
product_bullets.length
n
q
n
product_bullets
n
q
doc.css("div#detail-bullets div.content ul li")[1].text.split(":")[1].strip
doc.css("div#detail-bullets div.content ul li")[1].text.split(":")[1]
doc.css("div#detail-bullets div.content ul li")[1].text
doc.css("div#detail-bullets div.content ul li")[0].text.split(":")[1].strip
doc.css("div#detail-bullets div.content ul li")[0].text.split(":")[1].trim
doc.css("div#detail-bullets div.content ul li")[0].text.split(":")[1]
doc.css("div#detail-bullets div.content ul li")[0].text.split(":")
doc.css("div#detail-bullets div.content ul li")[0].text
doc.css("div#detail-bullets div.content ul li")[0]
doc.css("div#details-bullets div.content ul li")[0]
doc.css("div#formats ul li span.a-color-price").text.strip
doc.css("div#formats ul li span.a-color-price").text.trim
doc.css("div#formats ul li span.a-color-price").text.strip(" ")
doc.css("div#formats ul li span.a-color-price").text
doc.css("div#formats ul li span.a-color-price").value
doc.css("div#formats ul li span.a-color-price")
doc.css("img#imgBlkFront")
doc.css("img#imgBlkFront")[0]["src"]
doc.css("img#imgBlkFront")
doc.css('span.author span.a-declarative a')[0].text
doc.css('span.author span.a-declarative a')[0]
doc.css('span#productTitle')
doc.css('span#productTitle")
details_page = agent.get(details_url)
agent.get(details_url)
details_url = book.css('div.a-col-right div.a-spacing-small a.s-access-detail-page')[0]["href"]
book.css('div.a-col-right div.a-spacing-small a.s-access-detail-page')[0]["href"]
book.css('div.a-col-right div.a-spacing-small a.s-access-detail-page')[0]
book.css('div.a-col-right div.a-spacing-small a.s-access-detail-page')
book.css('div.a-col-right div.a-spacing-small')
book.css('div.a-col-right div')[1]
book.css('div.a-col-right div')[1].css('a.s-access-detail-page')
book.css('div.a-col-right div')[1].css('a')[0]["href"]
book.css('div.a-col-right div')[1].css('a')["href"]
book.css('div.a-col-right div')[1]
book.css('div.a-col-right div')[1].css('a')
book.css('div.a-col-right div')[1].css('a)
book.css('div.a-col-right div')[1]
q
book.css('div.a-col-left img')[0]["src"]
book.css('div.a-col-left img')[0].src
book.css('div.a-col-left img')[0]
book.css('div.a-col-left img')
book.css('div.a-col-left img')["src"]
book.css('div.a-col-left img').src
book.css('div.a-col-left img')
book.css('div.a-col-left')
book.css('div > a')
book.find("img")
book
book = doc.css('div#search-results div#mainResults ul li')[0]
book = doc.css('div#search-results div#mainResults ul li')[0]["data-asin"]
book = doc.css('div#search-results div#mainResults ul li')[0]
book.css('h2').text
book
book = doc.css('div#search-results div#mainResults ul li')[0]
doc.css('div#search-results div#mainResults ul li')[0]
doc.css('div#search-results div#mainResults ul li')
doc.css('div#search-results div#mainResults ul li').length
doc.css('div#search-results div#mainResults ul').length
doc.css('div#search-results div#mainResults ul')
doc.css('div#search-results div#mainResults')
doc.css('div#search-results#mainResults')
doc.css('div#search-results')[0]
doc.css('div#search-results')
page.css('div#reference a')
doc.css('div[@id='search-results']
doc.css('div[@id='search-results')
doc.css('a')[0]
doc.css('a')
doc.css('h1')[0].text
doc.css('h1').text
doc = Nokogiri::HTML(page.content)
Nokogiri::HTML(page.content)
page
page.content
page
doc = Nokogiri::XML(page, nil, 'UTF-8')
doc = Nokogiri::HTML(page)
Nokogiri::HTML(page)
page
q
page
q
page
